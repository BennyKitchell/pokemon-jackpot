services:
  redis:
    image: redis:latest
    container_name: redis-pokemon-jackpot
    restart: always
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    networks: [ "test_network" ]

  db:
    image: postgres
    container_name: pg-pokemon-jackpot
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test
    networks: [ "test_network" ]
    volumes:
      - ./postgres-data:/var/lib/postgres/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d test"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build: 
      context: .
      dockerfile: user-service/Dockerfile.user-service
    ports:
      - "8020:8020"
    environment:
      DB_HOST: db
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: test
    depends_on:
      db:
        condition: service_healthy
    networks: [ "test_network" ]

  pokemon-service:
    build: 
      context: .
      dockerfile: pokemon-service/Dockerfile.pokemon-service
    ports:
      - "8084:8084"
    environment:
      DB_HOST: db
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: test
    depends_on:
      db:
        condition: service_healthy
    networks: [ "test_network" ]

  kafka:
      image: apache/kafka:latest
      container_name: kafka-pokemon-jackpot
      ports:
        - "9093:9093"
      networks: [ "test_network" ]


networks:
   test_network:
        driver: bridge

volumes:
  postgres-data: